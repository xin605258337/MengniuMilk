
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="~/Scripts/axios.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <link href="~/bootstrap-3.3.7-dist/bootstrap337/css/bootstrap.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js"></script>
    <link rel="stylesheet" href="https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <style>
        .modal-dialog {
          
            width: 1200px;
    

        }
       
        .modal-content {
            text-align: center;
        }
    </style>
</head>
<body>
    <div>
        <h3>不合格产品管理</h3>
    </div>
    <div id="app" class="div-td">

        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                            &times;
                        </button>
                        <h4 class="modal-title" id="myModalLabel">
                          不合格产品处理
                        </h4>
                    </div>
                    <table class="table table-hover table-bordered table-striped">
                        <tr style="background-color:pink;color:white;text-align:center">                            
                            <th style="text-align:center">样品名称</th>
                            <th style="text-align:center">质检计划名称</th>
                            <th style="text-align:center">指标项分类</th>
                            <th style="text-align:center">指标项名称</th>
                            <th style="text-align:center">指标项上限</th>
                            <th style="text-align:center">指标项标准</th>
                            <th style="text-align:center">指标项下限</th>
                            <th style="text-align:center">指标项结果值</th>
                            <th style="text-align:center">指标项结果状态</th>
                            <th style="text-align:center">操作</thstyle="text-align:center">
                        </tr>
                        <tr v-for="item in QCResultList">
                            <td style="text-align:center">{{item.Name}}</td>
                            <td style="text-align:center">{{item.QCPlanName}}</td>
                            <td style="text-align:center">
                                {{item.TargetType_Name}}
                            </td>
                            <td style="text-align:center">{{item.Target_Name}}</td>
                            <td style="text-align:center">{{item.StandardValuesMax}}</td>
                            <td style="text-align:center">{{item.StandardValues}}</td>
                            <td style="text-align:center">{{item.StandardValuesMin}}</td>
                            <td style="text-align:center"><input id="Text1" type="text" v-model="item.Result" /></td>
                            <td style="text-align:center">{{item.State==0?"未检验":(item.State==1?"符合":"不符合")}}</td>
                            <td style="text-align:center"><a href="#" v-on:click="UptDispost(item.ID,item.Result,item.StandardValuesMax,item.StandardValuesMin)">保存</a>
                            </td>
                        </tr>
                    </table>
                    <input v-on:click="deleteDispost()" type="button" value="提交" class="btn btn-info"/>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            关闭
                        </button>                       
                    </div>
                </div>
            </div>
        </div>





        <table v-show="list.length" class="table table-hover table-bordered table-responsive">
            <tr style="background-color:skyblue;color:white;text-align:center">
                <th style="text-align:center">不合格ID</th>
                <th style="text-align:center">样品名称</th>
                <th style="text-align:center">质检名称</th>
                <th style="text-align:center">质检类型</th>
                <th style="text-align:center">检验工序</th>
                <th style="text-align:center">处理方式</th>
            </tr>
            <tr v-for="item in list ">
                <td style="text-align:center">{{item.UnqualifiedID}}</td>
                <td style="text-align:center">{{item.Name}}</td>
                <td style="text-align:center">
                    {{item.QCPlanName}}
                </td>
                <td style="text-align:center">
                    {{item.Type_Name}}
                </td>
                <td style="text-align:center">
                    {{item.Process_Name}}
                </td>              
                <td style="text-align:center">
                    <input data-toggle="modal" data-target="#myModal" v-on:click="Dispost(item.ID,item.QCtask_ID)" type="button" value="整改" class="btn btn-info"/>
                    <input id="Button1" type="button" v-on:click="DelUnqualified(item.ID,item.QCtask_ID)" value="销毁" class="btn btn-danger" />
                </td>
            </tr>
        </table>
    </div>
</body>
</html>
<script type="text/javascript">
    var vm = new Vue({
        el: "#app",
        data: {  

            QCResultList: [],
            sampleID: 0,
            qcPlanId: 0,
            QCPlanType: [],
            QCPlanObjType: [],
            Process: [],
            Facility: [],
            TargetType: [],
            Conduct: "请选择",
            list: [],
          

        },
        mounted() {
            this.getQCPlanType();
            this.getQCPlanObjType();
            this.getProcesses();
            this.getTargetType();
            this.getFacility();
            this.getUnqualified();
            @*this.sampleID =@Request.QueryString["Id"].ToString();
            this.qcTaskId =@Request.QueryString["qcTaskID"].ToString();*@
            this.getDispost();
        },
        
        methods: {
            //获取不合格样品明细
            getDispost: function () {
                axios.get('http://localhost:8103/GetDispost?sampleId=' + this.sampleID).then(
                    (response) => {
                        this.QCResultList = [];
                        for (var i = 0; i < response.data.length; i++) {
                            this.QCResultList.push(response.data[i]);
                        }
                    },
                    (response) => {
                        alert(response.status + "1");
                    }
                ).catch(function (response) {
                    alert(response);
                });

            },
            //修改不合格信息
            UptDispost: function (Id, ResultValue, max, min) {
                var state = 0;
                if (ResultValue <= max && ResultValue >= min) {
                    state = 1;
                }
                else {
                    state = 2;
                }
                var params = new URLSearchParams();
                params.append('ID', Id);
                params.append('Result', ResultValue);
                params.append('State', state);
                axios.post('http://localhost:8103/UpdateResultLis', params).then(
                    (response) => {
                        if (response.data > 0) {
                            alert("保存成功!!!");
                            this.getDispost();
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },
            ////将不合格信息改为合格之后并且修改质检结果录入表的状态
            deleteDispost: function () {
                axios.get('http://localhost:8103/UpdateResultEenters?sampleId=' + this.sampleID + "&qcTaskId=" + this.qcPlanId).then(
                    (response) => {
                        if (response.data > 0) {
                            alert("修改质检结果状态成功!!!");
                            axios.get('http://localhost:8103/DeleteUnqualified?id=' + this.qcPlanId).then((respose) => {
                                if (respose.data > 0) {
                                    alert("删除成功!!!");
                                    location.href = '/Unqualified/Index';
                                }
                            },
                                (response) => {
                                    alert(response.status);
                                }
                            ).catch(function (response) {
                                alert(response);
                            })
                        }
                    },
                    (response) => {
                        alert(response.status + "1");
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },






            //页面跳转并传采样品ID
            //Dispost: function (ID, id) {
            //    location.href = "/Unqualified/Index?Id=" + ID + "&qcTaskID=" + id;
            //},
            Dispost: function (ID, Id) {
                this.sampleID = ID;
                this.qcPlanId = Id;
                console.log(this.qcPlanId)
                this.getDispost();
            },
            //获取质检类型表
            getQCPlanType: function () {
                axios.get('http://localhost:8103/GetQCPlanTypes').then(
                    (response) => {
                        this.QCPlanType = [];
                        for (var i = 0; i < response.data.length; i++) {
                            this.QCPlanType.push(response.data[i]);
                        }
                    },
                    (response) => {
                        alert(response.status + "1");
                    }
                ).catch(function (response) {
                    alert(response);
                });

            },
            //获取对象类型表
            getQCPlanObjType: function () {
                axios.get('http://localhost:8103/GetQCPlanObjTypes').then(
                    (response) => {
                        this.QCPlanObjType = [];
                        for (var i = 0; i < response.data.length; i++) {
                            this.QCPlanObjType.push(response.data[i]);
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });

            },
            //获取检验工序表
            getProcesses: function () {
                axios.get('http://localhost:8103/GetProcess').then(
                    (response) => {
                        this.Process = [];
                        for (var i = 0; i < response.data.length; i++) {
                            this.Process.push(response.data[i]);
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });

            },
            //获取指标分类表
            getTargetType: function () {
                axios.get('http://localhost:8103/GetTargetTypes').then(
                    (response) => {
                        this.TargetType = [];
                        for (var i = 0; i < response.data.length; i++) {
                            this.TargetType.push(response.data[i]);
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });

            },
            //获取质检设备表
            getFacility: function () {
                axios.get('http://localhost:8103/GetFacilities').then(
                    (response) => {
                        this.Facility = [];
                        for (var i = 0; i < response.data.length; i++) {
                            this.Facility.push(response.data[i]);
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });

            },
            //获取不合格样品信息
            getUnqualified: function () {
                axios.get('http://localhost:8103/GetUnqualifieds').then((response) => {
                    this.list = [];
                    for (var i = 0; i < response.data.length; i++) {
                        this.list.push(response.data[i]);
                    }
                    console.log(response.data)
                },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },
            //删除不合格样品
            DelUnqualified: function (Id,ID) {
                axios.get('http://localhost:8103/DeleteSample?id=' + Id).then((respose) => {
                    if (respose.data > 0) {
                        axios.get('http://localhost:8103/DelQCtask?id=' + ID).then((respose) => {
                        },
                            (response) => {
                                alert(response.status);
                            }
                        ).catch(function (response) {
                            alert(response);
                        });
                        alert("销毁成功!!!");
                        this.getUnqualified();
                    }
                },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },
            //修改处理方式
            uptConduct: function (id,conduct) {
                var params = new URLSearchParams();
                params.append('UnqualifiedID', id);
                params.append('Conduct', conduct);
                axios.post('http://localhost:8103/UpdateConduct', params).then(
                    (response) => {
                        if (response.data > 0) {
                            this.getUnqualified();
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            }

        },

    })
</script>
