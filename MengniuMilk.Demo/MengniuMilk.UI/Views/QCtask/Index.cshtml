
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
   
    <script src="~/Scripts/axios.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <link href="~/bootstrap-3.3.7-dist/bootstrap337/css/bootstrap.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js"></script>
</head>
<body>
    <div id="app">
       

        <input type="button" class="btn btn-danger" value="添加质检任务" onclick="location.href='/QCtask/AddQCtask'" />
        <table class="table table-hover table-bordered" style="width:1000px">
            <tr style="background-color:skyblue;color:white;text-align:center">
                <td style="text-align:center">ID</td>
                <td style="text-align:center">质检计划名称</td>
                <td style="text-align:center">采样名称</td>
                <td style="text-align:center">通知时间</td>
                <td style="text-align:center">检验工序</td>
                <td style="text-align:center">状态</td>
                <td style="text-align:center">操作</td>

            </tr>
            <tr v-for="item in list ">
                <td style="text-align:center">{{item.QCtask_ID}}</td>
                <td style="text-align:center">
                    {{item.QCPlanName}}
                </td>
                <td style="text-align:center">
                    <select id="Select1" v-model="item.SAMPIEID">
                        <option value="请选择">--请选择--</option>
                        <option v-for="type in Sample1" v-bind:value="type.ID">{{type.Name}}</option>
                    </select>
                </td>
                <td style="text-align:center">
                    {{item.InformTime}}
                </td>
                <td style="text-align:center">
                    {{item.Process_Name}}
                </td>
                <td style="text-align:center">
                    {{ item.State==1?"已检验":"未检验"}}
                </td>
                <td style="text-align:center">
                    <div v-if="item.QCtask_ID!=''">
                        <a href="#" v-on:click="Del(item.QCtask_ID)">删除</a>
                        <a href="#" v-on:click="GetQCtaskbyName(item.QCtask_ID)">发送</a>
                    </div>
                </td>
            </tr>
        </table>

    </div>
</body>
</html>
<script>
    var vx = new Vue({
        el: "#app",
        data: {
            //QCPlanType1: [],
            Sample1: [],
            QCPlan1: [],
            Process: [],
            list: [],
        },
        mounted() {
            //this.getQCPlanType1();
            this.getQCPlanName();
            this.getSampleName();
            this.getProcesses();
            this.getList();
        },
        methods: {
            //获取检验工序表
            getProcesses: function () {
                axios.get('http://localhost:8103/GetProcess').then(
                    (response) => {
                        this.Process = [];
                        for (var i = 0; i < response.data.length; i++) {
                            this.Process.push(response.data[i]);
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });

            },

            //质检计划名称
            getQCPlanName: function () {
                axios.get('http://localhost:8103/GetQCPlansName').then(
                    (response) => {
                        this.QCPlan1 = [];
                        for (var i = 0; i < response.data.length; i++) {
                            this.QCPlan1.push(response.data[i]);
                        }
                    },
                    (response) => {
                        alert(response.status + "1");
                    }
                ).catch(function (response) {
                    alert(response);
                });

            },
            //获取采样名称
            getSampleName: function () {
                axios.get('http://localhost:8103/GetSample').then(
                    (response) => {
                        this.Sample1 = [];
                        for (var i = 0; i < response.data.length; i++) {
                            this.Sample1.push(response.data[i]);
                        }
                    },
                    (response) => { 
                        alert(response.status + "1");
                    }
                ).catch(function (response) {
                    alert(response);
                });

            },
            //获取质检任务信息
            getList: function () {
                axios.get('http://localhost:8103/GetQCtasks').then((response) => {
                    this.list = [];
                    for (var i = 0; i < response.data.length; i++) {
                        this.list.push(response.data[i]);
                    }
                
                },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },

            Del: function (ID) {
                axios.get('http://localhost:8103/DelQCtask?id=' + ID).then((respose) => {
                    if (respose.data > 0) {
                        alert("删除成功!!!");
                        this.getList();
                    }
                },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },

            //修改质检计划信息
            UptQCtask: function (QCtask_ID, QCPLAN_ID, QCPlanType, State, SAMPIEID) {
                var params = new URLSearchParams();
                params.append('QCtask_ID', QCtask_ID);
                params.append('QCPLAN_ID', QCPLAN_ID);
                params.append('QCPlanType', QCPlanType);
                params.append('State', State);
                params.append('SAMPIEID', SAMPIEID);              
                axios.post('http://localhost:8103/UptQCtask', params).then(
                    (response) => {
                        console.log(response.data);
                        if (response.data > 0) {
                            alert("修改成功!!!");
                            this.getList();
                        }
                       
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },

            //根据检验工序将质检任务ID发送到不同的流程里  
            GetQCtaskbyName: function (ID) {
                axios.get('http://localhost:8103/GetProcessByID?id=' + ID).then((respose) => {
                    if (respose.data == 6) {
                        //把质检任务ID添加到生乳质量检验表
                        axios.get('http://localhost:8103/GetQCtaskbyID?id=' + ID).then((respose) => {
                            if (respose.data > 0) {
                                alert("已发送至生乳质量检测表");
                              
                                this.getList();
                            }
                            else {
                                alert("该质检任务已发送过，无需再次发送!");
                               
                            }
                        },
                            (response) => {
                                alert(response.status);
                            }
                        ).catch(function (response) {
                            alert(response);
                        });
                        this.getList();
                    }
                    else {
                        //把质检任务ID添加到包装质量检验表
                        axios.get('http://localhost:8103/AddPack?id=' + ID).then((respose) => {
                            if (respose.data > 0) {
                                alert("已发送至包装质量检测表!");
                                this.getList();
                            }
                            else {
                                alert("该质检任务已发送过，无需再次发送!");
                              
                            }
                        },
                            (response) => {
                                alert(response.status);
                            }
                        ).catch(function (response) {
                            alert(response);
                        });
                        this.getList();
                    }
                },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },
        },
    })
</script>